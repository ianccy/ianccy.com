{"componentChunkName":"component---src-templates-post-tsx","path":"/reacthoc/","result":{"data":{"site":{"siteMetadata":{"title":"Ian Chu"}},"markdownRemark":{"id":"fd783194-7e61-5230-8253-754cf62f6e2b","excerpt":"換了工作環境，接觸了全新的專案，一打開 react 專案，恩…滿滿的 stateless component，稍微整理一下相關資訊。這邊要來介紹使用 stateless component 的時候，常會搭配使用的 Higher Order Components…","html":"<p>換了工作環境，接觸了全新的專案，一打開 react 專案，恩…滿滿的 stateless component，稍微整理一下相關資訊。這邊要來介紹使用 stateless component 的時候，常會搭配使用的 Higher Order Components，之前有看到「高階組件」這區塊，被他名字誤會了，實際上一點也不高階，他就只是一個 function 函式，接受參數元件然後回傳全新元件，簡易的範例如下。</p>\n<p><a href=\"http://www.css88.com/react/docs/higher-order-components.html\" title=\"React官方說明\">React 官方說明 </a> - 高階組件是一個函數，能夠接受一個組件並返回一個新的組件。</p>\n<h2 id=\"stateless-component\" style=\"position:relative;\"><a href=\"#stateless-component\" aria-label=\"stateless component permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>stateless component</h2>\n<p>ps.以下混雜使用 es6 解構、展開運算子(Spread Operator)寫法，在 react 中處理大量 props 很方便。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//stateless component  預設props會作為參數</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">NameCard</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>h2<span class=\"token operator\">></span>Hello<span class=\"token punctuation\">,</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h2<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//接到一個參數的元件 然後加上props 回傳有加入props的元件</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">Warpper</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">Item</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> props <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Chu\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>Item <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span>props<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">const</span> element <span class=\"token operator\">=</span> <span class=\"token function\">Warpper</span><span class=\"token punctuation\">(</span>NameCard<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"root\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<iframe height='265' scrolling='no' title='ZovoEQ' src='//codepen.io/chu1228/embed/ZovoEQ/?height=265&theme-id=dark&default-tab=js,result&embed-version=2' frameborder='no' allowtransparency='true' allowfullscreen='true' style='width: 100%;'>See the Pen <a href='https://codepen.io/chu1228/pen/ZovoEQ/'>ZovoEQ</a> by ianchu (<a href='https://codepen.io/chu1228'>@chu1228</a>) on <a href='https://codepen.io'>CodePen</a>.\n</iframe>\n[範例連結 ](https://codepen.io/chu1228/pen/vjpRrW?editors=0010 \"範例連結\")\n<h2 id=\"hoc-component\" style=\"position:relative;\"><a href=\"#hoc-component\" aria-label=\"hoc component permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>HOC component</h2>\n<p>ps.es6 arrow function 產生 return function 邏輯</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Wrapper</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">a</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">b</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// babel 會編譯為如下</span>\n<span class=\"token keyword\">var</span> <span class=\"token function-variable function\">Wrapper</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token function\">Wrapper</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">b</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>接下來就改使用 return function 來傳遞額外資料</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//建立 Person 元件</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">Person</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">,</span> status <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> props<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span>\n      Hello<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">}</span> is <span class=\"token punctuation\">{</span>age<span class=\"token punctuation\">}</span> years old<span class=\"token punctuation\">,</span>ohhh and so <span class=\"token punctuation\">{</span>status<span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//建構包裹的function</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Warpper</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">child</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">//加入物件 status 判斷age 大於18 true=>產生old false =>產生young</span>\n  props <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>props<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">status</span><span class=\"token operator\">:</span> props<span class=\"token punctuation\">.</span>age <span class=\"token operator\">></span> <span class=\"token number\">18</span> <span class=\"token operator\">?</span> <span class=\"token string\">\"old\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"young\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">child</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>props <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> person1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ian\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">28</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> element <span class=\"token operator\">=</span> <span class=\"token function\">Warpper</span><span class=\"token punctuation\">(</span>Person<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>person1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"root\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<iframe height='265' scrolling='no' title='VxyQOa' src='//codepen.io/chu1228/embed/VxyQOa/?height=265&theme-id=dark&default-tab=js,result&embed-version=2' frameborder='no' allowtransparency='true' allowfullscreen='true' style='width: 100%;'>See the Pen <a href='https://codepen.io/chu1228/pen/VxyQOa/'>VxyQOa</a> by ianchu (<a href='https://codepen.io/chu1228'>@chu1228</a>) on <a href='https://codepen.io'>CodePen</a>.\n</iframe>\n[範例連結 ](https://codepen.io/chu1228/pen/VxyQOa?editors=0010 \"範例連結\")\n<p>核心概念就是將元件包裹上我們想要增加的屬性，舉凡是 props、lifecycle 等等，我們可以將許多元件共用的函式，整理建立一個專門用來處理 HOC 的 function，然後各元件重複使用。redux 的 connect 也是同樣使用 HOC 的觀念，將 mapStateToProps、mapDispatchToProps 在處理成我們要的 props 傳遞給元件。</p>\n<p>主要是網路看不到 stateless component 這方面的介紹，所以才寫這篇解釋一下下 HOC 在幹嘛。</p>\n<p>以上如果有錯誤，再麻煩留言提醒。感謝!</p>\n<!--- ![react](../images/react.png \"react\") --->\n","fields":{"readingTime":{"text":"4 min read"}},"frontmatter":{"title":"React Higher Order Components 初探觀念","date":"May 08, 2018","description":"介紹關於使用stateless component時，常會搭配使用的Higher Order Components，之前有看到「高階組件」這區塊，被他名字誤會了，實際上一點也不高階，他就只是一個function 函式，接受參數元件然後回傳全新元件，簡易的範例如下。","categories":"javascript","tags":["react.js"],"thumbnail":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#181818","images":{"fallback":{"src":"/static/49f3722d7cadbd2be8eefba27f6a5890/b1838/react.png","srcSet":"/static/49f3722d7cadbd2be8eefba27f6a5890/caad8/react.png 183w,\n/static/49f3722d7cadbd2be8eefba27f6a5890/aef11/react.png 366w,\n/static/49f3722d7cadbd2be8eefba27f6a5890/b1838/react.png 732w","sizes":"(min-width: 732px) 732px, 100vw"},"sources":[{"srcSet":"/static/49f3722d7cadbd2be8eefba27f6a5890/305d6/react.webp 183w,\n/static/49f3722d7cadbd2be8eefba27f6a5890/12464/react.webp 366w,\n/static/49f3722d7cadbd2be8eefba27f6a5890/164a3/react.webp 732w","type":"image/webp","sizes":"(min-width: 732px) 732px, 100vw"}]},"width":1280,"height":657.4863387978141}}},"image":{"publicURL":"/static/49f3722d7cadbd2be8eefba27f6a5890/react.png"}}},"previous":{"fields":{"slug":"/2018-04-gaevents/"},"frontmatter":{"title":"Google analytics 事件追蹤、轉換目標設定教學 ga event"}},"next":{"fields":{"slug":"/2018-05-fbvotify/"},"frontmatter":{"title":"Facebook 粉絲團網域驗證教學"}}},"pageContext":{"id":"fd783194-7e61-5230-8253-754cf62f6e2b","previousPostId":"2befcafc-1603-5374-b4ce-16af77febe57","nextPostId":"6aea7088-7cbe-5318-9137-3a23bd82b596"}},"staticQueryHashes":["3649515864","3761976949","441988385"]}