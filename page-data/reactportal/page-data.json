{"componentChunkName":"component---src-templates-post-tsx","path":"/reactportal/","result":{"data":{"site":{"siteMetadata":{"title":"Ian Chu"}},"markdownRemark":{"id":"27b0f134-0874-5992-8ce1-e14222a0f585","excerpt":"這幾天專案要處理非常麻煩的畫面，子層被父層 overflow: hidden 加 postion relative 切到部分展開元件，突然想到之前同事提到新功能 Portals，Portals 能夠將元件向任意 dom 節點依附渲染，非常酷炫的功能，想說就順便來研究一下 React Portals…","html":"<p>這幾天專案要處理非常麻煩的畫面，子層被父層 overflow: hidden 加 postion relative 切到部分展開元件，突然想到之前同事提到新功能 Portals，Portals 能夠將元件向任意 dom 節點依附渲染，非常酷炫的功能，想說就順便來研究一下 React Portals。</p>\n<p>這邊會介紹兩個範例，頁面上渲染元件，還有渲染元件到 window open。</p>\n<p><a href=\"https://reactjs.org/docs/fragments.html\" title=\"React fragment\">React fragment </a> 、<a href=\"https://reactjs.org/docs/portals.html\" title=\"React Portals\">React Portals </a></p>\n<h2 id=\"react-portals-rule\" style=\"position:relative;\"><a href=\"#react-portals-rule\" aria-label=\"react portals rule permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>React Portals rule</h2>\n<p>要用 React Portals 必須遵照規定的格式 ReactDOM.createPortal(element,container)，第一個參數要傳遞需要渲染的物件，第二個參數 container，建立<code class=\"language-text\">document.createElement('div')</code> 作為 render 的 container。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createPortal</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">,</span> container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>會需要用到兩個 lifeCycle，第一個是 componentDidMount react 元件 render 後調用，另一個則是 componentWillUnmount 在元件被移除後會調用。</p>\n<p>再來在 componentDidMount 上加入要渲染元素的節點，讓這個 component render 後調用 appendChild，讓 dom 依附渲染上去。如果要移除渲染的話，則是控制 component 移除觸發 componentWillUnmount，再調用 removeChild 就完成了移除。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// create component</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Portal</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// create element as render container element</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>el <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// select element to render</span>\n    <span class=\"token keyword\">const</span> elementId <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"elementId\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    elementId<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>el<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">componentWillUnmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// select element to remove</span>\n    <span class=\"token keyword\">const</span> elementId <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"elementId\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    elementId<span class=\"token punctuation\">.</span><span class=\"token function\">removeChild</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>el<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// first argument as element or string or fragment</span>\n    <span class=\"token comment\">// second argument as render container</span>\n    <span class=\"token keyword\">return</span> ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createPortal</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>el<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"portals-example\" style=\"position:relative;\"><a href=\"#portals-example\" aria-label=\"portals example permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Portals example</h2>\n<p>聽起來可能有點抽象，實際來寫個範例看看。點擊左邊的按鈕是使用 Portals 顯示圖片，右邊的則是一般父子層顯示方法。</p>\n<p>會發現左邊用 Portals 顯示，image 元件會打印到 section 外，避免右邊的一般父子渲染方法，在 section 內被 overflow hidden 蓋住。</p>\n<p><a href=\"https://codesandbox.io/s/4w42r7p69x\" title=\"Portals example\">Portals example Code </a></p>\n<iframe src=\"https://csb-4w42r7p69x-gtgmeeadnb.now.sh/\" width=\"100%\" height=\"550\"></iframe>\n<h2 id=\"portals-open-window-example\" style=\"position:relative;\"><a href=\"#portals-open-window-example\" aria-label=\"portals open window example permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Portals open window example</h2>\n<p>Portals 也可以打印到 window open 頁面的節點上。這邊範例是使用了 open window，再將元件透過 document.body.appendChild 渲染到開啟的視窗上。這邊是看到 medium 的範例，是利用 setInterval 每秒執行一次 setState，處理 小視窗 更新 parent 的視窗，有試驗過 postMessage 沒效果。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Portal</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>el <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>Window <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>Window <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"width=800,height=500\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>Window<span class=\"token punctuation\">.</span>document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>el<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">componentWillUnmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>Window<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createPortal</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>el<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><a href=\"https://codesandbox.io/s/nr23kvm144\" title=\"Portals open window\">Portals open window Code </a></p>\n<iframe src=\"https://csb-nr23kvm144-nxbmzxxibg.now.sh/\" width=\"100%\" height=\"350\"></iframe>\n<!--- ![react](../images/react.png \"react\") --->\n","fields":{"readingTime":{"text":"3 min read"}},"frontmatter":{"title":"React Portals render component anywhere example","date":"November 19, 2018","description":"React Portals 是非常酷炫的功能，能夠將元件向任意dom節點依附渲染，這邊會介紹兩個範例，頁面上渲染元件，還有渲染元件到window open上。","categories":"javascript","tags":["react.js"],"thumbnail":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#181818","images":{"fallback":{"src":"/static/49f3722d7cadbd2be8eefba27f6a5890/b1838/react.png","srcSet":"/static/49f3722d7cadbd2be8eefba27f6a5890/caad8/react.png 183w,\n/static/49f3722d7cadbd2be8eefba27f6a5890/aef11/react.png 366w,\n/static/49f3722d7cadbd2be8eefba27f6a5890/b1838/react.png 732w","sizes":"(min-width: 732px) 732px, 100vw"},"sources":[{"srcSet":"/static/49f3722d7cadbd2be8eefba27f6a5890/305d6/react.webp 183w,\n/static/49f3722d7cadbd2be8eefba27f6a5890/12464/react.webp 366w,\n/static/49f3722d7cadbd2be8eefba27f6a5890/164a3/react.webp 732w","type":"image/webp","sizes":"(min-width: 732px) 732px, 100vw"}]},"width":1280,"height":657.4863387978141}}},"image":{"publicURL":"/static/49f3722d7cadbd2be8eefba27f6a5890/react.png"}},"tableOfContents":"<ul>\n<li><a href=\"#react-portals-rule\">React Portals rule</a></li>\n<li><a href=\"#portals-example\">Portals example</a></li>\n<li><a href=\"#portals-open-window-example\">Portals open window example</a></li>\n</ul>"},"previous":{"fields":{"slug":"/2018-11-structuredseo/"},"frontmatter":{"title":"結構化資料SEO 優化顯示搜尋結果"}},"next":{"fields":{"slug":"/2018-10-imgprogress/"},"frontmatter":{"title":"Upload progress bar drag&drop 圖片拖拉上傳進度條"}}},"pageContext":{"id":"27b0f134-0874-5992-8ce1-e14222a0f585","previousPostId":"de71c8b3-9e85-565e-8766-9f3ae4cdc2b8","nextPostId":"670aa326-aa76-598f-b15c-d5188724554a"}},"staticQueryHashes":["3649515864","3707347541","3761976949"],"slicesMap":{}}