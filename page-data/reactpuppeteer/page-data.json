{"componentChunkName":"component---src-templates-post-tsx","path":"/reactpuppeteer/","result":{"data":{"site":{"siteMetadata":{"title":"Ian Chu"}},"markdownRemark":{"id":"488ce399-f7c8-50c4-a7ad-e0ee7917861e","excerpt":"最近接觸某個重要專案，這專案很特別，每個狀態都會對應不同 config 有不同回應，網頁操作、業務邏輯十分之複雜，大概就像是 tree structure 一樣。我負責翻新頁面的 login flow，雖然我對改動邏輯掌握度高，但我滿擔心是否有沒看到的功能，會關聯到舊邏輯。 因為 use case…","html":"<p>最近接觸某個重要專案，這專案很特別，每個狀態都會對應不同 config 有不同回應，網頁操作、業務邏輯十分之複雜，大概就像是 tree structure 一樣。我負責翻新頁面的 login flow，雖然我對改動邏輯掌握度高，但我滿擔心是否有沒看到的功能，會關聯到舊邏輯。</p>\n<p>因為 use case 實在太繁雜了，每次都需要請 PM 或工程師手動測試，但又常常漏掉某些特殊情境，讓我有感而發，如果有跑測試就好了。有剛好有時間就來研究一下，要如何在 react 專案上跑 End to End Test。</p>\n<h2 id=\"puppeteer-介紹\" style=\"position:relative;\"><a href=\"#puppeteer-%E4%BB%8B%E7%B4%B9\" aria-label=\"puppeteer 介紹 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Puppeteer 介紹</h2>\n<p>Puppeteer 是由 Chrome DevTools team 團隊開發的，它是一個 node library 工具，提供 API 讓我們控制 chrome 或 Chromium，並能以 headless chrome(chrome without chrome) 或正常模式執行。相對於 Selenium 專注在跨瀏覽器測試，Puppeteer 則是專注依賴 Chromium 並使用相關的 API 測試。</p>\n<h3 id=\"主要功能\" style=\"position:relative;\"><a href=\"#%E4%B8%BB%E8%A6%81%E5%8A%9F%E8%83%BD\" aria-label=\"主要功能 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>主要功能</h3>\n<ol>\n<li>產生 pdf 網頁快照。</li>\n<li>render 頁面是基於 single page application 架構的頁面，並產生靜態內容。</li>\n<li>自動化測試，input、鍵盤、UI 測試。</li>\n<li>能夠使用最新的 chrome 環境進行測試。</li>\n<li>產生頁面優化診斷。</li>\n<li>測試 chrome extension。</li>\n</ol>\n<p><a href=\"https://developers.google.com/web/tools/puppeteer\" title=\"Puppeteer 官方介紹\">Puppeteer 官方介紹</a></p>\n<p>這個需要測試的頁面是以 React 開發，純 client side render，E2E 測試也需要處理 render SPA，適合我們的情境。</p>\n<h2 id=\"安裝環境\" style=\"position:relative;\"><a href=\"#%E5%AE%89%E8%A3%9D%E7%92%B0%E5%A2%83\" aria-label=\"安裝環境 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>安裝環境</h2>\n<p>建立資料夾，並安裝 package.json 、 puppeteer 等相關設定，接下來建立 js 檔案來使用 node 測試 puppeteer。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">mkdir test-puppeteer\ncd test-puppeteer\nnpm init -f\nnpm install --save-dev puppeteer dotenv\ntouch test.js</code></pre></div>\n<h3 id=\"執行頁面載入-screenshot\" style=\"position:relative;\"><a href=\"#%E5%9F%B7%E8%A1%8C%E9%A0%81%E9%9D%A2%E8%BC%89%E5%85%A5-screenshot\" aria-label=\"執行頁面載入 screenshot permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>執行頁面載入 screenShot</h3>\n<p>接下來嘗試載入 google 頁面，並且自動輸入值來使用 google search。首先我們需要 引入 puppeteer，並執行 puppeteer.launch 啟動 puppeteer，再利用 goto 來載入 <a href=\"https://google.com\">https://google.com</a> 頁面，接下來執行 screenshot 並命名 image 儲存位置，接下來 執行 node test，成功跑起來的話會發現新增了 screenshot_google.png ，打開來就是模擬 screenshot 的畫面。</p>\n<p><a href=\"https://pptr.dev/#?product=Puppeteer&#x26;version=v2.1.1&#x26;show=outline\" title=\"Puppeteer 文件\">Puppeteer 文件</a></p>\n<ul>\n<li>google.js</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> puppeteer <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"puppeteer\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> browser <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> puppeteer<span class=\"token punctuation\">.</span><span class=\"token function\">launch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> page <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> browser<span class=\"token punctuation\">.</span><span class=\"token function\">newPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">goto</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://google.com\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">screenshot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">path</span><span class=\"token operator\">:</span> <span class=\"token string\">\"./screenshot_google.png\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">await</span> browser<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"模擬網頁互動\" style=\"position:relative;\"><a href=\"#%E6%A8%A1%E6%93%AC%E7%B6%B2%E9%A0%81%E4%BA%92%E5%8B%95\" aria-label=\"模擬網頁互動 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>模擬網頁互動</h3>\n<p>使用 page.evaluate(function) 功能，可以讓我們執行 javascript，這邊我們會使用 javascript DOM selector 輸入搜尋框，並且點擊送出搜尋按鈕，再來 page.waitForNavigation() 等待頁面導覽完成，再來繼續執行 evaluate 點擊第一個搜尋結果的標題，最後執行 screenShot。</p>\n<p>簡單講就是用 JavaScript 模擬使用者互動操作，來促使畫面更新變動，再截圖存取畫面。</p>\n<p>page.evaluate 可以執行 javascript，直接以 selector 操作，這邊模擬輸入 coronavirus，並且執行 click submit，接下來 page.waitForNavigation 等待網頁導覽，接下來 page.evaluate 執行第一篇搜尋結果標題 click，最後執行 page.screenshot，截圖儲存並關閉。就完成了一個簡易的 puppeteer 測試。</p>\n<ul>\n<li>google.js</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token operator\">...</span>\n  <span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">evaluate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"input[type='search']\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"coronavirus\"</span><span class=\"token punctuation\">;</span>\n    document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"button[jsaction='click:.CLIENT']\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">waitForNavigation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">evaluate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#rso div[role=\"heading\"]'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">waitForNavigation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">screenshot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">path</span><span class=\"token operator\">:</span> <span class=\"token string\">\"./screenshot_google_search.png\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">await</span> browser<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><img src=\"/d9d735bc2d49bf6ef1ed398eb719d467/googlecorona.gif\" alt=\"googlecorona\" title=\"googlecorona\"></p>\n<p><a href=\"https://puppeteersandbox.com/P0aWYvFO\" title=\"puppeteersandbox google Demo\">puppeteersandbox google Demo</a></p>\n<h2 id=\"測試-facebook-login\" style=\"position:relative;\"><a href=\"#%E6%B8%AC%E8%A9%A6-facebook-login\" aria-label=\"測試 facebook login permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>測試 facebook login</h2>\n<p>接下來測試一直想跑的 facebook login，曾經某天 facebook 偷偷改版 api，造成整個產品的 login 服務掛掉，或是前幾個月 facebook 連線就出問題了，但這都是在客戶端回報才發現到問題，所以期待這段以 cronjob 定時 run，來確保登入功能是正常的。</p>\n<p>首先載入頁面，假設是手機版，頁面會自動跳出登入按鈕，按鈕上有寫上特殊的 attribute id=“e2e-login-button”，接下來等待這個按鈕顯示，可以使用 page.waitForSelector 等待這個 element visible，執行 button click。</p>\n<p>倒轉到 facebook 網頁後，用 page.evaluate 執行 javascript，填入 facebook 帳號、密碼，再來點擊 facebook 登入按鈕，登入完成後會出現授權頁面，同樣點擊確認授權按鈕。</p>\n<p>倒轉回到原本網站，接下來就判斷是否顯示 登出按鈕，確保使用者有完成登入流程。</p>\n<p>核心邏輯大概就是 waitForSelector 等待 DOM render，並且 page.evaluate 執行互動，在等待 DOM render，執行互動 loop，達成我們所期待的畫面滾動。</p>\n<ul>\n<li>fbLogin.js</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dotenv\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">config</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> puppeteer <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"puppeteer\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> devices <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"puppeteer/DeviceDescriptors\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> browser <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> puppeteer<span class=\"token punctuation\">.</span><span class=\"token function\">launch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> page <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> browser<span class=\"token punctuation\">.</span><span class=\"token function\">newPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">emulate</span><span class=\"token punctuation\">(</span>devices<span class=\"token punctuation\">[</span><span class=\"token string\">\"iPhone 7\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">goto</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://www.feversocial.com/promo/join?promoid=134364\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">waitForSelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#e2e-login-button\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">visible</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#e2e-login-button\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">waitForSelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#email_input_container\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">visible</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">evaluate</span><span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">(</span><span class=\"token parameter\">account<span class=\"token punctuation\">,</span> password</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#email_input_container input\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span>\n        process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">FBACCOUNT</span><span class=\"token punctuation\">;</span>\n      document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"input[type='password']\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span>\n        process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">FBPASSWORD</span><span class=\"token punctuation\">;</span>\n      document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"button[name='login']\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">FBACCOUNT</span><span class=\"token punctuation\">,</span>\n    process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">FBPASSWORD</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">waitForSelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"button[name='__CONFIRM__']\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">visible</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">evaluate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"button[name='__CONFIRM__']\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">waitForSelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div[type='0']\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">visible</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">waitForFunction</span><span class=\"token punctuation\">(</span>\n    <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">document.querySelectorAll('div[type=\"0\"]')[1].textContent === '登出'</span><span class=\"token template-punctuation string\">`</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">screenshot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">path</span><span class=\"token operator\">:</span> <span class=\"token string\">\"example.png\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">fullPage</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">await</span> browser<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><img src=\"/37e38b7ff813e263d52a6bf2cae84408/fever_fblogin.gif\" alt=\"fever fblogin\" title=\"fever fblogin\"></p>\n<p>提醒一下，這個測試情境只針對曾經給予過 facebook auth 權限，因為跑完每次還要 reset auth 非常不方便。</p>\n<ul>\n<li>記得修改 facebook 帳號密碼 ( 如果擔心線上測試有資安疑慮，就避免使用，我是都用專門測試的帳號 )</li>\n</ul>\n<p><a href=\"https://puppeteersandbox.com/gThYhDA2\" title=\"puppeteersandbox facebook login Demo\">puppeteersandbox facebook login Demo</a></p>\n<h2 id=\"搭配-jest-測試\" style=\"position:relative;\"><a href=\"#%E6%90%AD%E9%85%8D-jest-%E6%B8%AC%E8%A9%A6\" aria-label=\"搭配 jest 測試 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>搭配 Jest 測試</h2>\n<p>上述都是使用 puppeteer 建出流程，但實際上還需要搭配測試斷言工具，這樣才能讓判斷出測試 case 是不是正常，如果不正常的話是哪個流程有問題等等。</p>\n<p>這邊使用到 Jest，環境設定與之前 Jest 大同小異，主要是需要安裝支援 puppeteer 的工具，讓 Jest 能夠執行 puppeteer 環境，基本上沒有太大的難度。如果遇到問題的話 Jest 官網也有 source code 可以提供下載。</p>\n<ul>\n<li>安裝 Jest</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">npm install <span class=\"token operator\">--</span>save<span class=\"token operator\">-</span>dev jest<span class=\"token operator\">-</span>puppeteer jest</code></pre></div>\n<p>建立 jest.config.js, jest.setup.js</p>\n<ul>\n<li>jest.config.js</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">preset</span><span class=\"token operator\">:</span> <span class=\"token string\">\"jest-puppeteer\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">setupFilesAfterEnv</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"./jest.setup.js\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>設定環境以及應用 setup 設定</p>\n<ul>\n<li>jest.setup.js</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">jest<span class=\"token punctuation\">.</span><span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token number\">10000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>延長 jest default 8000 msec 時間限制</p>\n<p><a href=\"https://jestjs.io/docs/en/puppeteer\" title=\"Jest with Puppeteer\">Jest with Puppeteer</a></p>\n<p><a href=\"https://github.com/checkly/puppeteer-examples\" title=\"Puppeteersandbox github sample code\">Puppeteersandbox github sample code</a></p>\n<h2 id=\"建立測試檔案\" style=\"position:relative;\"><a href=\"#%E5%BB%BA%E7%AB%8B%E6%B8%AC%E8%A9%A6%E6%AA%94%E6%A1%88\" aria-label=\"建立測試檔案 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>建立測試檔案</h2>\n<p>首先建立 <code class=\"language-text\">_test_</code> folder，接下來建立 login.spec.js，針對整個登入流程做判斷，預期之外的狀況就截圖，並且拋出相對錯誤訊息。Jest 無法跳出瀏覽器模擬，所以直接設定 headless 即可。</p>\n<p>將上面的 fbLogin.js script 貼上來作為修改，waitForSelector 增加 timeout，避免卡在一個狀態過久浪費時間，增加 try catch，針對錯誤進行截圖，方便出問題時 debug。</p>\n<p>其餘與一般的 jest 差別不大，就是在預期發生錯誤增加斷言判斷等，這邊就不特別介紹了。實際內容再請觀看 github 上檔案。</p>\n<p>小雷，process 我卡了大概 30 分鐘，process.env.FBPASSWORD 要用 function 作為參數帶入，直接在 evaluate callback function 內，因為環境緣故，是無法取得 process.env 的值。還有其他 dom selector 怎樣寫比較不會出錯等等，這是最耗時的部分，因為是 side project，沒有直接去改 dom 的 tag attribute，因為滿多強硬的 selector 寫法，建議大家還是好好 naming 狀態。</p>\n<ul>\n<li>login.spec.js</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">...</span>\n<span class=\"token function\">beforeEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">goto</span><span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"https://www.feversocial.com/promo/join?promoid=134230\"</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">describe</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Login\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Fever Login Flow\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token parameter\">done</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">emulate</span><span class=\"token punctuation\">(</span>devices<span class=\"token punctuation\">[</span><span class=\"token string\">\"iPhone 7\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">waitForSelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#e2e-login-button\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">visible</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">timeout</span><span class=\"token operator\">:</span> <span class=\"token number\">1500</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> buttonHref <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">$eval</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#e2e-login-button'</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">el</span> <span class=\"token operator\">=></span> el<span class=\"token punctuation\">.</span>href<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">await</span> <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>buttonHref<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>not<span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">screenshot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">path</span><span class=\"token operator\">:</span> <span class=\"token string\">\"./promo_button_href_error.png\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#e2e-login-button\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">...</span>\n    <span class=\"token keyword\">await</span> page<span class=\"token punctuation\">.</span><span class=\"token function\">evaluate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">account<span class=\"token punctuation\">,</span> password</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#email_input_container input\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> account<span class=\"token punctuation\">;</span>\n      document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"input[type='password']\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> password<span class=\"token punctuation\">;</span>\n      document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"button[name='login']\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">FBACCOUNT</span><span class=\"token punctuation\">,</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">FBPASSWORD</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">...</span></code></pre></div>\n<p>Source Code : <a href=\"https://github.com/Ianpig/puppeteer-jest-example\" title=\"puppeteer-jest-example\">puppeteer-jest-example</a></p>\n<h2 id=\"心得\" style=\"position:relative;\"><a href=\"#%E5%BF%83%E5%BE%97\" aria-label=\"心得 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>心得</h2>\n<p>這些看起來很簡單，但這些我大概花了 3 天時間，雖然撥出來的時間零零碎碎，剛好某天開發時間有多出時間，就來嘗試用 puppeteer 寫一個測試登入，實際上未來要在搭配 docker 部署上去並以專案 release 時自動觸發，然後出現錯誤要 alarm，這有空再嘗試研究…。</p>\n<p>以上如果有問題歡迎留言，感謝。</p>","fields":{"readingTime":{"text":"10 min read"}},"frontmatter":{"title":"Puppeteer End-to-End Test React","date":"February 28, 2020","description":"會以 Puppeteer 在 react 專案上跑 End to End Test。puppeteer 是由 Chrome DevTools team 團隊開發的，它是一個 node library 工具，提供 API 讓我們控制 chrome 或 Chromium，模擬執行各種功能。","categories":"javascript","tags":["react.js"],"thumbnail":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#585868","images":{"fallback":{"src":"/static/b6532504d32a73de3210b9baf63cf00f/cacb5/puppeteerjest.png","srcSet":"/static/b6532504d32a73de3210b9baf63cf00f/fcfa6/puppeteerjest.png 223w,\n/static/b6532504d32a73de3210b9baf63cf00f/472cb/puppeteerjest.png 445w,\n/static/b6532504d32a73de3210b9baf63cf00f/cacb5/puppeteerjest.png 890w","sizes":"(min-width: 890px) 890px, 100vw"},"sources":[{"srcSet":"/static/b6532504d32a73de3210b9baf63cf00f/1a9dd/puppeteerjest.webp 223w,\n/static/b6532504d32a73de3210b9baf63cf00f/75b23/puppeteerjest.webp 445w,\n/static/b6532504d32a73de3210b9baf63cf00f/02fce/puppeteerjest.webp 890w","type":"image/webp","sizes":"(min-width: 890px) 890px, 100vw"}]},"width":1280,"height":641.438202247191}}},"image":{"publicURL":"/static/b6532504d32a73de3210b9baf63cf00f/puppeteerjest.png"}}},"previous":{"fields":{"slug":"/2020-04-immutable/"},"frontmatter":{"title":"Immutable 對於 React 重要性"}},"next":{"fields":{"slug":"/2019-12-iframeblockcookie/"},"frontmatter":{"title":"阻擋第三方(Block third-party) Cookie，各瀏覽器狀態"}}},"pageContext":{"id":"488ce399-f7c8-50c4-a7ad-e0ee7917861e","previousPostId":"46a5ba7f-31f3-5f2e-86f5-29ebcc1b1f28","nextPostId":"597a5f69-e54c-5c84-a11f-0041959bf90e"}},"staticQueryHashes":["3649515864","3707347541","3761976949"],"slicesMap":{}}