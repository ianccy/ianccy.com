{"componentChunkName":"component---src-templates-post-tsx","path":"/arrayhandle/","result":{"data":{"site":{"siteMetadata":{"title":"Ian Chu"}},"markdownRemark":{"id":"fee22e35-47a7-53d2-9585-5bc180c4a5f4","excerpt":"javascript 在實務上最常用 array 處理多筆資料，因為彈性大好運用，不論在 api 取資料、cookie、local storage 等，幾乎的用的到。 這邊介紹 Array sort，現代網頁技術快速發展，前端經常要用到非同步來取得資料，拿到的陣列資料，經常會需要排序功能，ie…","html":"<p>javascript 在實務上最常用 array 處理多筆資料，因為彈性大好運用，不論在 api 取資料、cookie、local storage 等，幾乎的用的到。</p>\n<p>這邊介紹 Array sort，現代網頁技術快速發展，前端經常要用到非同步來取得資料，拿到的陣列資料，經常會需要排序功能，ie.價格排序、新舊排序、同類型排序等。</p>\n<h2 id=\"array-sort-陣列概念\" style=\"position:relative;\"><a href=\"#array-sort-%E9%99%A3%E5%88%97%E6%A6%82%E5%BF%B5\" aria-label=\"array sort 陣列概念 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Array sort 陣列概念</h2>\n<p>根據 w3c 介紹 array.sort(compareFunction)，參數依照需求帶入不同，另外直接改變陣列資料。</p>\n<p>sort 會對陣列跑兩個數跑比對條件。例如下面範例第一次會 a 參數會是 Arr[0]、b 是 Arr[1]，然後 return a.price-b.price 回傳正數或負數或 0，再依據回傳數值調換位置，左至右重複跑到完全符合條件的順序。這就是 sort 執行的方式。</p>\n<p>題外話下面 sort 內的 function 則是跑了 9 次。</p>\n<p>ps.return 小於 0 將 a 放在左邊 b 在右邊、<br/>\n大於 0 將 a 放在右邊 b 在左邊、<br/>\n等於 0 不變更位置。</p>\n<h2 id=\"array-sort-範例\" style=\"position:relative;\"><a href=\"#array-sort-%E7%AF%84%E4%BE%8B\" aria-label=\"array sort 範例 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Array sort 範例</h2>\n<p>針對 price 數字 陣列排序</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> Arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"apple\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">price</span><span class=\"token operator\">:</span> <span class=\"token number\">50</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"watermelon\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">price</span><span class=\"token operator\">:</span> <span class=\"token number\">30</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"mango\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">price</span><span class=\"token operator\">:</span> <span class=\"token number\">90</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"banana\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">price</span><span class=\"token operator\">:</span> <span class=\"token number\">10</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"peer\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">price</span><span class=\"token operator\">:</span> <span class=\"token number\">10</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> times <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\nArr<span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  times<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 紀錄跑幾次</span>\n  <span class=\"token keyword\">return</span> a<span class=\"token punctuation\">.</span>price <span class=\"token operator\">-</span> b<span class=\"token punctuation\">.</span>price<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//會針對陣列跑回圈比對</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// [{name: \"banana\", price: 10},</span>\n<span class=\"token comment\">// {name: \"peer\", price: 20}</span>\n<span class=\"token comment\">// ......</span>\n<span class=\"token comment\">// {name: \"mango\", price: 90}]</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>times<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 9次</span></code></pre></div>\n<p>針對字串 name 陣列排序</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> Arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"apple\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">price</span><span class=\"token operator\">:</span> <span class=\"token number\">50</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"watermelon\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">price</span><span class=\"token operator\">:</span> <span class=\"token number\">30</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"mango\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">price</span><span class=\"token operator\">:</span> <span class=\"token number\">90</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"banana\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">price</span><span class=\"token operator\">:</span> <span class=\"token number\">10</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"peer\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">price</span><span class=\"token operator\">:</span> <span class=\"token number\">10</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\nArr<span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>name <span class=\"token operator\">></span> b<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//a 往右 b往左</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>name <span class=\"token operator\">&lt;</span> b<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//a 往左 b往右</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 不變順序</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// [{name: \"apple\", price: 50},</span>\n<span class=\"token comment\">// ......</span>\n<span class=\"token comment\">// {name: \"watermelon\", price: 30}]</span></code></pre></div>\n<p>以上就是 javascript sort 的排序，如果不希望重新要資料，前端是可以用這方法處理排序，如果不是上萬筆的話，是可以來用用 client 端效能。</p>\n<p>建議實際跑一次 sort function，用 chrome debug 來看看到底葫蘆裡再跑啥米東西。</p>\n<!--- ![JavaScript](../images/JavaScript-logo.png \"JavaScript\") --->\n","fields":{"readingTime":{"text":"3 min read"}},"frontmatter":{"title":"Javascript Array sort 陣列排序分類處理","date":"December 16, 2017","description":"介紹Array sort，現代網頁技術快速發展，前端經常要用到非同步來取得資料，拿到的陣列資料，經常會需要排序功能，ie.價格排序、新舊排序、同類型排序等，sort會對陣列跑兩個數跑比對條件，左至右重複跑到完全符合條件的順序。","categories":"javascript","tags":["javascript"],"thumbnail":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#e8d838","images":{"fallback":{"src":"/static/e0505dfa26d1f0856cca4d8ca2e3fb29/538ba/JavaScript-logo.png","srcSet":"/static/e0505dfa26d1f0856cca4d8ca2e3fb29/65a6c/JavaScript-logo.png 199w,\n/static/e0505dfa26d1f0856cca4d8ca2e3fb29/fc23f/JavaScript-logo.png 398w,\n/static/e0505dfa26d1f0856cca4d8ca2e3fb29/538ba/JavaScript-logo.png 796w","sizes":"(min-width: 796px) 796px, 100vw"},"sources":[{"srcSet":"/static/e0505dfa26d1f0856cca4d8ca2e3fb29/a78c4/JavaScript-logo.webp 199w,\n/static/e0505dfa26d1f0856cca4d8ca2e3fb29/90153/JavaScript-logo.webp 398w,\n/static/e0505dfa26d1f0856cca4d8ca2e3fb29/db695/JavaScript-logo.webp 796w","type":"image/webp","sizes":"(min-width: 796px) 796px, 100vw"}]},"width":1280,"height":678.5929648241206}}},"image":{"publicURL":"/static/e0505dfa26d1f0856cca4d8ca2e3fb29/JavaScript-logo.png"}},"tableOfContents":"<ul>\n<li><a href=\"#array-sort-%E9%99%A3%E5%88%97%E6%A6%82%E5%BF%B5\">Array sort 陣列概念</a></li>\n<li><a href=\"#array-sort-%E7%AF%84%E4%BE%8B\">Array sort 範例</a></li>\n</ul>"},"previous":{"fields":{"slug":"/2018-01-whatseo/"},"frontmatter":{"title":"SEO優化 google教學guideline介紹"}},"next":{"fields":{"slug":"/2017-12-mapcluster/"},"frontmatter":{"title":"Google Map marker cluster 標記使用教學"}}},"pageContext":{"id":"fee22e35-47a7-53d2-9585-5bc180c4a5f4","previousPostId":"451097c9-4a8b-5a8c-89cd-0403c9f86ed1","nextPostId":"879c82f3-7357-5ae2-bc81-302c482a4841"}},"staticQueryHashes":["3649515864","3707347541","3761976949"],"slicesMap":{}}