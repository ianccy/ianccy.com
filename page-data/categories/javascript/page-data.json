{"componentChunkName":"component---src-templates-categories-tsx","path":"/categories/javascript/","result":{"data":{"site":{"siteMetadata":{"title":"Ian Chu"}},"allMarkdownRemark":{"nodes":[{"excerpt":"假設一個 autocomplete 的需求， input 輸入框，需要在輸入字串的時候，更新下拉選單選項，類似 google search input 的建議，另外狀況是 auto search 的功能，當使用者邊在 input…","fields":{"slug":"/2023-02-throttledebounce/","readingTime":{"text":"10 min read"}},"frontmatter":{"date":"February 17, 2023","title":"Throttle and Debounce. 使用場景與嘗試實現它們","description":"debounce 可以解決掉短時間內快速 callback 的問題，能夠讓我們指定時間，並且在這時間經由每次重複調用去延長 callback 執行時間。最後我們會手刻一個 debounce 跟 throttle。","thumbnail":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#080808","images":{"fallback":{"src":"/static/df854c0457f886d49a0a47bc61913d79/111b8/throttle_debounce.png","srcSet":"/static/df854c0457f886d49a0a47bc61913d79/5f9fc/throttle_debounce.png 100w,\n/static/df854c0457f886d49a0a47bc61913d79/573c0/throttle_debounce.png 200w,\n/static/df854c0457f886d49a0a47bc61913d79/111b8/throttle_debounce.png 400w,\n/static/df854c0457f886d49a0a47bc61913d79/8b52e/throttle_debounce.png 800w","sizes":"(min-width: 400px) 400px, 100vw"},"sources":[{"srcSet":"/static/df854c0457f886d49a0a47bc61913d79/fd9c7/throttle_debounce.webp 100w,\n/static/df854c0457f886d49a0a47bc61913d79/f201f/throttle_debounce.webp 200w,\n/static/df854c0457f886d49a0a47bc61913d79/125dd/throttle_debounce.webp 400w,\n/static/df854c0457f886d49a0a47bc61913d79/505e6/throttle_debounce.webp 800w","type":"image/webp","sizes":"(min-width: 400px) 400px, 100vw"}]},"width":400,"height":199.00000000000003}}},"categories":"javascript"}},{"excerpt":"先是在前端社群上看到有人在問問題，為什麼他在開發時，，callback 會執行兩次，才看到有人貼上 React 18 beta 的文件，裡面提到為什麼 React 1…","fields":{"slug":"/2022-08-useeffectintro/","readingTime":{"text":"10 min read"}},"frontmatter":{"date":"August 06, 2022","title":"Rediscover useEffect and when to use it","description":"開發時不要預想用 useEffect 處理，但如果 code 難以閱讀、管理，或是要避免每次 update 都執行的 function，那才來考慮使用 useEffect。","thumbnail":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#c8c8c8","images":{"fallback":{"src":"/static/c94152458d98aee0f7484f9874cffe9a/6b019/sideeffect.jpg","srcSet":"/static/c94152458d98aee0f7484f9874cffe9a/c8ee8/sideeffect.jpg 100w,\n/static/c94152458d98aee0f7484f9874cffe9a/ca582/sideeffect.jpg 200w,\n/static/c94152458d98aee0f7484f9874cffe9a/6b019/sideeffect.jpg 400w,\n/static/c94152458d98aee0f7484f9874cffe9a/e737e/sideeffect.jpg 800w","sizes":"(min-width: 400px) 400px, 100vw"},"sources":[{"srcSet":"/static/c94152458d98aee0f7484f9874cffe9a/fd9c7/sideeffect.webp 100w,\n/static/c94152458d98aee0f7484f9874cffe9a/f201f/sideeffect.webp 200w,\n/static/c94152458d98aee0f7484f9874cffe9a/e8709/sideeffect.webp 400w,\n/static/c94152458d98aee0f7484f9874cffe9a/e7773/sideeffect.webp 800w","type":"image/webp","sizes":"(min-width: 400px) 400px, 100vw"}]},"width":400,"height":200}}},"categories":"javascript"}},{"excerpt":"前一篇介紹了關於 CSS DOM painting performance，再來分享個關於 CSS animation performance 相關資訊，後面會提到自己在專案上遇到相關的問題。 前一篇: cssperformance 先提一下，以下沒有要介紹 CSS…","fields":{"slug":"/2021-05-cssanimation/","readingTime":{"text":"7 min read"}},"frontmatter":{"date":"May 08, 2021","title":"CSS animation Performance","description":"分享個關於 CSS animation performance，後面會提到自己在專案上遇到相關的問題。提醒如果你需要使用 animation 的話，盡量能用只需要 Composite 的 style，避免對畫面造成可能的負擔。","thumbnail":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#282828","images":{"fallback":{"src":"/static/fb548587746e32189dd72f687ab6cd99/5fbc4/chrome-crash.png","srcSet":"/static/fb548587746e32189dd72f687ab6cd99/73cc8/chrome-crash.png 100w,\n/static/fb548587746e32189dd72f687ab6cd99/e48c2/chrome-crash.png 200w,\n/static/fb548587746e32189dd72f687ab6cd99/5fbc4/chrome-crash.png 400w,\n/static/fb548587746e32189dd72f687ab6cd99/1364e/chrome-crash.png 800w","sizes":"(min-width: 400px) 400px, 100vw"},"sources":[{"srcSet":"/static/fb548587746e32189dd72f687ab6cd99/aa370/chrome-crash.webp 100w,\n/static/fb548587746e32189dd72f687ab6cd99/e00e7/chrome-crash.webp 200w,\n/static/fb548587746e32189dd72f687ab6cd99/e8245/chrome-crash.webp 400w,\n/static/fb548587746e32189dd72f687ab6cd99/09e68/chrome-crash.webp 800w","type":"image/webp","sizes":"(min-width: 400px) 400px, 100vw"}]},"width":400,"height":195.00000000000003}}},"categories":"javascript"}},{"excerpt":"CSS 常被認為簡單好學，我對它看法是易學但難精通，以前都只想過實現各種 UI、效果，但沒認真考慮過效能，怎樣的寫法最適合這個情境。假設你有針對 google page speed、lighthouse…","fields":{"slug":"/2021-02-cssperformance/","readingTime":{"text":"5 min read"}},"frontmatter":{"date":"February 11, 2021","title":"Critical Rendering Path 關鍵渲染路徑優化","description":"假設你有針對 google page speed、lighthouse 優化過，應該會特別有感觸，該如何才能讓網頁載入更快。接下來討論如何讓畫面渲染載入更快，以及一些最佳化使用方式。","thumbnail":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f88848","images":{"fallback":{"src":"/static/9544917ac4a00b8c626e23163748bef2/ce409/paintings.jpg","srcSet":"/static/9544917ac4a00b8c626e23163748bef2/ba26f/paintings.jpg 100w,\n/static/9544917ac4a00b8c626e23163748bef2/d6db8/paintings.jpg 200w,\n/static/9544917ac4a00b8c626e23163748bef2/ce409/paintings.jpg 400w,\n/static/9544917ac4a00b8c626e23163748bef2/a3f92/paintings.jpg 800w","sizes":"(min-width: 400px) 400px, 100vw"},"sources":[{"srcSet":"/static/9544917ac4a00b8c626e23163748bef2/f4f76/paintings.webp 100w,\n/static/9544917ac4a00b8c626e23163748bef2/0518f/paintings.webp 200w,\n/static/9544917ac4a00b8c626e23163748bef2/7878c/paintings.webp 400w,\n/static/9544917ac4a00b8c626e23163748bef2/9077d/paintings.webp 800w","type":"image/webp","sizes":"(min-width: 400px) 400px, 100vw"}]},"width":400,"height":208}}},"categories":"javascript"}},{"excerpt":"JavsScript 的 closure (閉包) 是什麼？ 假設你有在寫 javascript 的話，你可能每天都在用，但你只是沒特別查覺而已。 Clousre 在 MDN 上解釋為 這個解釋是我看過比較簡單直白的。 而我自己對 closure…","fields":{"slug":"/2020-06-closure/","readingTime":{"text":"5 min read"}},"frontmatter":{"date":"June 27, 2020","title":"JavaScript Closure 你一定有用過的閉包","description":"JavsScript 的 closure (閉包) 是什麼？ 假設你有在寫 javascript 的話，你可能每天都在用，但你只是沒特別查覺而已。","thumbnail":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#e8e8e8","images":{"fallback":{"src":"/static/d823d2c008518badcd4d3c8af9842dc0/b17b4/closure.jpg","srcSet":"/static/d823d2c008518badcd4d3c8af9842dc0/420d6/closure.jpg 100w,\n/static/d823d2c008518badcd4d3c8af9842dc0/bf431/closure.jpg 200w,\n/static/d823d2c008518badcd4d3c8af9842dc0/b17b4/closure.jpg 400w,\n/static/d823d2c008518badcd4d3c8af9842dc0/463eb/closure.jpg 800w","sizes":"(min-width: 400px) 400px, 100vw"},"sources":[{"srcSet":"/static/d823d2c008518badcd4d3c8af9842dc0/aa370/closure.webp 100w,\n/static/d823d2c008518badcd4d3c8af9842dc0/e00e7/closure.webp 200w,\n/static/d823d2c008518badcd4d3c8af9842dc0/e8245/closure.webp 400w,\n/static/d823d2c008518badcd4d3c8af9842dc0/bbf38/closure.webp 800w","type":"image/webp","sizes":"(min-width: 400px) 400px, 100vw"}]},"width":400,"height":195.00000000000003}}},"categories":"javascript"}},{"excerpt":"Immutable 是我想寫很久的主題，前一份工作時，就大大的踩到關於 immutable 的雷，那時候依靠 google…","fields":{"slug":"/2020-04-immutable/","readingTime":{"text":"4 min read"}},"frontmatter":{"date":"April 29, 2020","title":"Immutable 對於 React 重要性","description":"React 有提到 state 的更新，都必須要是 immutable，當你有使用到 useState 或是 pureComponent、shouldComponentUpdate，你就會發現問題。","thumbnail":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#e8e8f8","images":{"fallback":{"src":"/static/4f1b194d3f394f7e66bb7c726da840eb/967a7/immutable.jpg","srcSet":"/static/4f1b194d3f394f7e66bb7c726da840eb/96d0d/immutable.jpg 100w,\n/static/4f1b194d3f394f7e66bb7c726da840eb/174c6/immutable.jpg 200w,\n/static/4f1b194d3f394f7e66bb7c726da840eb/967a7/immutable.jpg 400w,\n/static/4f1b194d3f394f7e66bb7c726da840eb/e505b/immutable.jpg 800w","sizes":"(min-width: 400px) 400px, 100vw"},"sources":[{"srcSet":"/static/4f1b194d3f394f7e66bb7c726da840eb/c8e8b/immutable.webp 100w,\n/static/4f1b194d3f394f7e66bb7c726da840eb/99399/immutable.webp 200w,\n/static/4f1b194d3f394f7e66bb7c726da840eb/825de/immutable.webp 400w,\n/static/4f1b194d3f394f7e66bb7c726da840eb/3a40a/immutable.webp 800w","type":"image/webp","sizes":"(min-width: 400px) 400px, 100vw"}]},"width":400,"height":164}}},"categories":"javascript"}},{"excerpt":"最近接觸某個重要專案，這專案很特別，每個狀態都會對應不同 config 有不同回應，網頁操作、業務邏輯十分之複雜，大概就像是 tree structure 一樣。我負責翻新頁面的 login flow…","fields":{"slug":"/2020-02-reactpuppeteer/","readingTime":{"text":"10 min read"}},"frontmatter":{"date":"February 28, 2020","title":"Puppeteer End-to-End Test React","description":"會以 Puppeteer 在 react 專案上跑 End to End Test。puppeteer 是由 Chrome DevTools team 團隊開發的，它是一個 node library 工具，提供 API 讓我們控制 chrome 或 Chromium，模擬執行各種功能。","thumbnail":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#585868","images":{"fallback":{"src":"/static/b6532504d32a73de3210b9baf63cf00f/c8dce/puppeteerjest.png","srcSet":"/static/b6532504d32a73de3210b9baf63cf00f/5f9fc/puppeteerjest.png 100w,\n/static/b6532504d32a73de3210b9baf63cf00f/573c0/puppeteerjest.png 200w,\n/static/b6532504d32a73de3210b9baf63cf00f/c8dce/puppeteerjest.png 400w,\n/static/b6532504d32a73de3210b9baf63cf00f/7bc8c/puppeteerjest.png 800w","sizes":"(min-width: 400px) 400px, 100vw"},"sources":[{"srcSet":"/static/b6532504d32a73de3210b9baf63cf00f/fd9c7/puppeteerjest.webp 100w,\n/static/b6532504d32a73de3210b9baf63cf00f/f201f/puppeteerjest.webp 200w,\n/static/b6532504d32a73de3210b9baf63cf00f/e8709/puppeteerjest.webp 400w,\n/static/b6532504d32a73de3210b9baf63cf00f/b1e09/puppeteerjest.webp 800w","type":"image/webp","sizes":"(min-width: 400px) 400px, 100vw"}]},"width":400,"height":200}}},"categories":"javascript"}},{"excerpt":"來分享個 cookie 相關的內容，是前陣子合作專案測試階段遇到的問題，發生情境是，合作廠商的手機瀏覽器會無法登入會員，主要都是 IOS 用戶。 提一下目前頁面會放置在對方網站上以 iframe 使用，用戶會點擊 iframe 內登入按鈕，轉導頁面，載入對應的登入 line…","fields":{"slug":"/2019-12-iframeblockcookie/","readingTime":{"text":"5 min read"}},"frontmatter":{"date":"December 11, 2019","title":"阻擋第三方(Block third-party) Cookie，各瀏覽器狀態","description":"IOS 11 開始預設開啟 prevent cross-site tracking 的設定，這會導致第三方 cookie 無法設置，若要完美處理 Block third-party Cookie 唯一解法就是改用 local Storage 或是 Session Storage。","thumbnail":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#181818","images":{"fallback":{"src":"/static/1c41405e1cfd8c04bb8410c46e89822a/309a6/blockcookie.jpg","srcSet":"/static/1c41405e1cfd8c04bb8410c46e89822a/420d6/blockcookie.jpg 100w,\n/static/1c41405e1cfd8c04bb8410c46e89822a/a73a1/blockcookie.jpg 200w,\n/static/1c41405e1cfd8c04bb8410c46e89822a/309a6/blockcookie.jpg 400w,\n/static/1c41405e1cfd8c04bb8410c46e89822a/558bc/blockcookie.jpg 800w","sizes":"(min-width: 400px) 400px, 100vw"},"sources":[{"srcSet":"/static/1c41405e1cfd8c04bb8410c46e89822a/aa370/blockcookie.webp 100w,\n/static/1c41405e1cfd8c04bb8410c46e89822a/8a265/blockcookie.webp 200w,\n/static/1c41405e1cfd8c04bb8410c46e89822a/c8e17/blockcookie.webp 400w,\n/static/1c41405e1cfd8c04bb8410c46e89822a/886ab/blockcookie.webp 800w","type":"image/webp","sizes":"(min-width: 400px) 400px, 100vw"}]},"width":400,"height":197}}},"categories":"javascript"}},{"excerpt":"redux 核心更新 flow ，當你用 redux 運行多個 dispatch 時，每一個 dispatch 都會獨立更新下去的，這代表著你會 update component 多次，如果你的更新資料又彼此關聯，就可能會發生錯誤。 目前執行的專案，資料都是 linked…","fields":{"slug":"/2019-11-reduxdispatch/","readingTime":{"text":"5 min read"}},"frontmatter":{"date":"November 30, 2019","title":"Redux multiple dispatch，batch redux-thunk","description":"redux 核心流程 dispatch action => reducer => store，當你用 redux 運行多個 dispatch 時，每一個 dispatch 都會獨立更新下去的，如果你的更新資料又彼此關聯，就可能會發生錯誤。","thumbnail":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#688898","images":{"fallback":{"src":"/static/98774fcb9185ece7c2ac182e96d70db5/d5263/redux-dispatch.png","srcSet":"/static/98774fcb9185ece7c2ac182e96d70db5/2b3cb/redux-dispatch.png 100w,\n/static/98774fcb9185ece7c2ac182e96d70db5/a01ba/redux-dispatch.png 200w,\n/static/98774fcb9185ece7c2ac182e96d70db5/d5263/redux-dispatch.png 400w,\n/static/98774fcb9185ece7c2ac182e96d70db5/1c373/redux-dispatch.png 800w","sizes":"(min-width: 400px) 400px, 100vw"},"sources":[{"srcSet":"/static/98774fcb9185ece7c2ac182e96d70db5/09ad4/redux-dispatch.webp 100w,\n/static/98774fcb9185ece7c2ac182e96d70db5/ddd64/redux-dispatch.webp 200w,\n/static/98774fcb9185ece7c2ac182e96d70db5/ca080/redux-dispatch.webp 400w,\n/static/98774fcb9185ece7c2ac182e96d70db5/5ceac/redux-dispatch.webp 800w","type":"image/webp","sizes":"(min-width: 400px) 400px, 100vw"}]},"width":400,"height":193.00000000000003}}},"categories":"javascript"}},{"excerpt":"Unit Test(單元測試)，針對程式的最小單位，進行測試，最小單位可能是一個 function，或一個 component、class…","fields":{"slug":"/2019-09-jestunit/","readingTime":{"text":"11 min read"}},"frontmatter":{"date":"September 29, 2019","title":"React Unit Test with Jest 單元測試","description":"單元測試在我剛寫程式時，認為測試 case 是自己預期的，還主觀的認為沒什麼用。但我在實際寫幾個測試後，能更專注在預期判斷 input output，也有助於你思考 function 架構更清楚。接下來就來針對 react hooks 做 component testing。","thumbnail":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#d8e8e8","images":{"fallback":{"src":"/static/7956ce03fba51cee80d476032b4bd3a6/bfb6f/reactunittest.png","srcSet":"/static/7956ce03fba51cee80d476032b4bd3a6/f42da/reactunittest.png 100w,\n/static/7956ce03fba51cee80d476032b4bd3a6/883db/reactunittest.png 200w,\n/static/7956ce03fba51cee80d476032b4bd3a6/bfb6f/reactunittest.png 400w,\n/static/7956ce03fba51cee80d476032b4bd3a6/6c4e8/reactunittest.png 800w","sizes":"(min-width: 400px) 400px, 100vw"},"sources":[{"srcSet":"/static/7956ce03fba51cee80d476032b4bd3a6/0f67b/reactunittest.webp 100w,\n/static/7956ce03fba51cee80d476032b4bd3a6/591bc/reactunittest.webp 200w,\n/static/7956ce03fba51cee80d476032b4bd3a6/e33c7/reactunittest.webp 400w,\n/static/7956ce03fba51cee80d476032b4bd3a6/39074/reactunittest.webp 800w","type":"image/webp","sizes":"(min-width: 400px) 400px, 100vw"}]},"width":400,"height":182.99999999999997}}},"categories":"javascript"}},{"excerpt":"React 是單向資料流，利用 React.createElement 建構出整個 element tree 結構，使用者利用 state 及 props 處理元件資料，並搭配觸發 react 更新元件。因為 props 是需要傳遞的，所以時常會遇到 props…","fields":{"slug":"/2019-07-reactcontextapi/","readingTime":{"text":"7 min read"}},"frontmatter":{"date":"July 28, 2019","title":"React Context API 跨元件傳遞資料","description":"React為了解決props 需要傳很多層問題，就在v16.3 更新 context API 的功能，context API 主要功能就是跨元件傳遞資料。利用createContext 建立context，並搭配Provider、Consumer、contexttype、usecontext 跨元件取值。","thumbnail":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#181818","images":{"fallback":{"src":"/static/49f3722d7cadbd2be8eefba27f6a5890/7019c/react.png","srcSet":"/static/49f3722d7cadbd2be8eefba27f6a5890/1cf7f/react.png 100w,\n/static/49f3722d7cadbd2be8eefba27f6a5890/a9c82/react.png 200w,\n/static/49f3722d7cadbd2be8eefba27f6a5890/7019c/react.png 400w","sizes":"(min-width: 400px) 400px, 100vw"},"sources":[{"srcSet":"/static/49f3722d7cadbd2be8eefba27f6a5890/7f3f0/react.webp 100w,\n/static/49f3722d7cadbd2be8eefba27f6a5890/b4f62/react.webp 200w,\n/static/49f3722d7cadbd2be8eefba27f6a5890/aa0f9/react.webp 400w","type":"image/webp","sizes":"(min-width: 400px) 400px, 100vw"}]},"width":400,"height":205}}},"categories":"javascript"}},{"excerpt":"React 發布了幾個月的 Hooks，最近也開始嘗試接觸，後面會稍微提一下 PureComponent，不會介紹 hooks 各種特殊用法，就只針對 hooks performance 優化做介紹，還有搭配 redux 的處理。 因為前陣子有處理過 React…","fields":{"slug":"/2019-06-reacthooks/","readingTime":{"text":"10 min read"}},"frontmatter":{"date":"June 01, 2019","title":"React Hooks Performance 效能處理","description":"React發布了幾個月的Hooks，最近也開始嘗試接觸，後面會稍微提一下PureComponent，不會介紹hooks各種特殊用法，就只針對hooks performance優化做介紹。","thumbnail":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#282828","images":{"fallback":{"src":"/static/ef923c6861937178eebcde2d6d04f7df/7019c/reacthooks.png","srcSet":"/static/ef923c6861937178eebcde2d6d04f7df/1cf7f/reacthooks.png 100w,\n/static/ef923c6861937178eebcde2d6d04f7df/a9c82/reacthooks.png 200w,\n/static/ef923c6861937178eebcde2d6d04f7df/7019c/reacthooks.png 400w,\n/static/ef923c6861937178eebcde2d6d04f7df/fc09b/reacthooks.png 800w","sizes":"(min-width: 400px) 400px, 100vw"},"sources":[{"srcSet":"/static/ef923c6861937178eebcde2d6d04f7df/7f3f0/reacthooks.webp 100w,\n/static/ef923c6861937178eebcde2d6d04f7df/b4f62/reacthooks.webp 200w,\n/static/ef923c6861937178eebcde2d6d04f7df/aa0f9/reacthooks.webp 400w,\n/static/ef923c6861937178eebcde2d6d04f7df/46f9e/reacthooks.webp 800w","type":"image/webp","sizes":"(min-width: 400px) 400px, 100vw"}]},"width":400,"height":205}}},"categories":"javascript"}},{"excerpt":"嗨，接下來要來分享 google excel api 之前未完成的部分，前面介紹了建立 api，讓我們能在 google excel 新資料，但是透過 api 管理資料還差讀取、更新表單資料，簡單講就是 API 的 CRUD。 後面會完成 API…","fields":{"slug":"/2019-05-googleformadv/","readingTime":{"text":"9 min read"}},"frontmatter":{"date":"May 11, 2019","title":"Google Sheet RESTful API 試算表表單","description":"分享如何建立app script api管理讀取、更新excel表單資料，簡單講就是API的CRUD，並且製作一個可以用的簡單畫面，串接api更新訂單狀態。","thumbnail":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8e8e8","images":{"fallback":{"src":"/static/063f4f61503f698e231eb393b81038ea/9d80a/sheetapiquery.png","srcSet":"/static/063f4f61503f698e231eb393b81038ea/dae4d/sheetapiquery.png 100w,\n/static/063f4f61503f698e231eb393b81038ea/47381/sheetapiquery.png 200w,\n/static/063f4f61503f698e231eb393b81038ea/9d80a/sheetapiquery.png 400w,\n/static/063f4f61503f698e231eb393b81038ea/d8208/sheetapiquery.png 800w","sizes":"(min-width: 400px) 400px, 100vw"},"sources":[{"srcSet":"/static/063f4f61503f698e231eb393b81038ea/d63bf/sheetapiquery.webp 100w,\n/static/063f4f61503f698e231eb393b81038ea/988cc/sheetapiquery.webp 200w,\n/static/063f4f61503f698e231eb393b81038ea/2e226/sheetapiquery.webp 400w,\n/static/063f4f61503f698e231eb393b81038ea/831d5/sheetapiquery.webp 800w","type":"image/webp","sizes":"(min-width: 400px) 400px, 100vw"}]},"width":400,"height":217}}},"categories":"javascript"}},{"excerpt":"最近身邊朋友問到 google speedtest 分數優化處理，剛好處理完網頁優化專案，雖然分數尚有進步空間…，lazyload 幾乎是網站必備的優化處理，分享一點處理 lazyload 心得。 首先拿出一個網站，然後在google speedtest…","fields":{"slug":"/2019-04-reactlazyload/","readingTime":{"text":"9 min read"}},"frontmatter":{"date":"April 25, 2019","title":"lazy loading image 延後載入畫面外圖片","description":"分享一點最近處理lazyload心得，lazy loading image 對網站是很合理的處理優化，使用者沒看到的區塊本來就不需要浪費網路載入。","thumbnail":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#e8e8e8","images":{"fallback":{"src":"/static/675b990232abdf6b157bebf2953305da/6f850/lazyloading.png","srcSet":"/static/675b990232abdf6b157bebf2953305da/9ae00/lazyloading.png 100w,\n/static/675b990232abdf6b157bebf2953305da/6ddfe/lazyloading.png 200w,\n/static/675b990232abdf6b157bebf2953305da/6f850/lazyloading.png 400w","sizes":"(min-width: 400px) 400px, 100vw"},"sources":[{"srcSet":"/static/675b990232abdf6b157bebf2953305da/df6d5/lazyloading.webp 100w,\n/static/675b990232abdf6b157bebf2953305da/70f31/lazyloading.webp 200w,\n/static/675b990232abdf6b157bebf2953305da/f5d2e/lazyloading.webp 400w","type":"image/webp","sizes":"(min-width: 400px) 400px, 100vw"}]},"width":400,"height":244}}},"categories":"javascript"}},{"excerpt":"JavaScript 處理 DOM 事件上的獲取和冒泡，實務上滿常用到的觀念，可以透過這方式解決一些麻煩問題，例如: popup 視窗的關閉、內外層 DOM 互動關係，另外事件獲取、冒泡也幾乎是面試必考題。 DOM 一般事件綁定 下面的例子，我 container…","fields":{"slug":"/2019-03-eventpass/","readingTime":{"text":"5 min read"}},"frontmatter":{"date":"March 21, 2019","title":"JavaScript Capture Bubble DOM事件獲取&冒泡","description":"JavaScript處理DOM事件上的獲取和冒泡，實務上滿常用到的觀念，可以透過這方式解決一些麻煩問題，例如popup視窗的關閉、內外層DOM互動關係，另外事件獲取、冒泡也幾乎是面試必考題。","thumbnail":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/2cd7d323a2c45583b490d8632d71165c/23035/dompass.png","srcSet":"/static/2cd7d323a2c45583b490d8632d71165c/109bb/dompass.png 100w,\n/static/2cd7d323a2c45583b490d8632d71165c/4fbc1/dompass.png 200w,\n/static/2cd7d323a2c45583b490d8632d71165c/23035/dompass.png 400w,\n/static/2cd7d323a2c45583b490d8632d71165c/7a6c3/dompass.png 800w","sizes":"(min-width: 400px) 400px, 100vw"},"sources":[{"srcSet":"/static/2cd7d323a2c45583b490d8632d71165c/a0e4b/dompass.webp 100w,\n/static/2cd7d323a2c45583b490d8632d71165c/35535/dompass.webp 200w,\n/static/2cd7d323a2c45583b490d8632d71165c/18f3b/dompass.webp 400w,\n/static/2cd7d323a2c45583b490d8632d71165c/50aa1/dompass.webp 800w","type":"image/webp","sizes":"(min-width: 400px) 400px, 100vw"}]},"width":400,"height":229}}},"categories":"javascript"}},{"excerpt":"Javascript 在 ES6 新增了大量非常實用的功能，其中重要一項就是 Promsie，讓我們可以很直覺的處理非同步，在以前如果我們需要同時發出多個非同步請求，就必須在每次調用 function 時，一起在參數帶回 callback 的 function…","fields":{"slug":"/2019-02-promise/","readingTime":{"text":"8 min read"}},"frontmatter":{"date":"February 18, 2019","title":"Javascript Promise example 簡易實作模擬","description":"接下來會用 promise 處理 callback hell，還有建立一個簡易的 promise，幫助我們理解promise。","thumbnail":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#282828","images":{"fallback":{"src":"/static/45d93443ae8910c4adb84870e715d286/465f1/callbackhell.png","srcSet":"/static/45d93443ae8910c4adb84870e715d286/fb3a9/callbackhell.png 100w,\n/static/45d93443ae8910c4adb84870e715d286/72f29/callbackhell.png 200w,\n/static/45d93443ae8910c4adb84870e715d286/465f1/callbackhell.png 400w,\n/static/45d93443ae8910c4adb84870e715d286/28b0a/callbackhell.png 800w","sizes":"(min-width: 400px) 400px, 100vw"},"sources":[{"srcSet":"/static/45d93443ae8910c4adb84870e715d286/f4f76/callbackhell.webp 100w,\n/static/45d93443ae8910c4adb84870e715d286/0518f/callbackhell.webp 200w,\n/static/45d93443ae8910c4adb84870e715d286/dccb0/callbackhell.webp 400w,\n/static/45d93443ae8910c4adb84870e715d286/35be4/callbackhell.webp 800w","type":"image/webp","sizes":"(min-width: 400px) 400px, 100vw"}]},"width":400,"height":207}}},"categories":"javascript"}},{"excerpt":"先來稍微介紹一下為什麼要做 server side render，另外這邊不會使用 next.js，雖然公司目前專案有用到，但我滿推薦用 next.js 的，很好導入並且解決很多需要處理的問題。(雖然有一些 bug、還會頻繁更新，兩年內 version 3 ->…","fields":{"slug":"/2019-01-reactssr/","readingTime":{"text":"8 min read"}},"frontmatter":{"date":"January 30, 2019","title":"React Server-side rendering SEO處理","description":"不使用next.js，來試著依靠原生方法，架構出React server-side render，會使用到react官方的cli create-react-app，以及node.js作為server。","thumbnail":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#181818","images":{"fallback":{"src":"/static/49f3722d7cadbd2be8eefba27f6a5890/7019c/react.png","srcSet":"/static/49f3722d7cadbd2be8eefba27f6a5890/1cf7f/react.png 100w,\n/static/49f3722d7cadbd2be8eefba27f6a5890/a9c82/react.png 200w,\n/static/49f3722d7cadbd2be8eefba27f6a5890/7019c/react.png 400w","sizes":"(min-width: 400px) 400px, 100vw"},"sources":[{"srcSet":"/static/49f3722d7cadbd2be8eefba27f6a5890/7f3f0/react.webp 100w,\n/static/49f3722d7cadbd2be8eefba27f6a5890/b4f62/react.webp 200w,\n/static/49f3722d7cadbd2be8eefba27f6a5890/aa0f9/react.webp 400w","type":"image/webp","sizes":"(min-width: 400px) 400px, 100vw"}]},"width":400,"height":205}}},"categories":"javascript"}},{"excerpt":"前陣子公司專案從 next 3 更新到 7、react 也從 15 更新到 16，希望能加快開發或佈署的速度，順便分享一下踩到了哪些的地雷。 首先呢，update react、react-dom、next，接下來開始測試一下 local build…","fields":{"slug":"/2018-12-nextupdate/","readingTime":{"text":"5 min read"}},"frontmatter":{"date":"December 09, 2018","title":"Update Next.js 7、react 16 error and bug","description":"前陣子公司專案從next3更新到7、react也從15更新到16，希望能加快開發或佈署的速度，順便分享一下踩到了哪些的地雷。","thumbnail":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/7b99da12437122f2dbf8e8ce89c73dc8/08292/next%26react.png","srcSet":"/static/7b99da12437122f2dbf8e8ce89c73dc8/73cc8/next%26react.png 100w,\n/static/7b99da12437122f2dbf8e8ce89c73dc8/bcdba/next%26react.png 200w,\n/static/7b99da12437122f2dbf8e8ce89c73dc8/08292/next%26react.png 400w,\n/static/7b99da12437122f2dbf8e8ce89c73dc8/ac78e/next%26react.png 800w","sizes":"(min-width: 400px) 400px, 100vw"},"sources":[{"srcSet":"/static/7b99da12437122f2dbf8e8ce89c73dc8/aa370/next%26react.webp 100w,\n/static/7b99da12437122f2dbf8e8ce89c73dc8/8a265/next%26react.webp 200w,\n/static/7b99da12437122f2dbf8e8ce89c73dc8/268cf/next%26react.webp 400w,\n/static/7b99da12437122f2dbf8e8ce89c73dc8/2d836/next%26react.webp 800w","type":"image/webp","sizes":"(min-width: 400px) 400px, 100vw"}]},"width":400,"height":196}}},"categories":"javascript"}},{"excerpt":"這幾天專案要處理非常麻煩的畫面，子層被父層 overflow: hidden 加 postion relative 切到部分展開元件，突然想到之前同事提到新功能 Portals，Portals 能夠將元件向任意 dom…","fields":{"slug":"/2018-11-reactportal/","readingTime":{"text":"3 min read"}},"frontmatter":{"date":"November 19, 2018","title":"React Portals render component anywhere example","description":"React Portals 是非常酷炫的功能，能夠將元件向任意dom節點依附渲染，這邊會介紹兩個範例，頁面上渲染元件，還有渲染元件到window open上。","thumbnail":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#181818","images":{"fallback":{"src":"/static/49f3722d7cadbd2be8eefba27f6a5890/7019c/react.png","srcSet":"/static/49f3722d7cadbd2be8eefba27f6a5890/1cf7f/react.png 100w,\n/static/49f3722d7cadbd2be8eefba27f6a5890/a9c82/react.png 200w,\n/static/49f3722d7cadbd2be8eefba27f6a5890/7019c/react.png 400w","sizes":"(min-width: 400px) 400px, 100vw"},"sources":[{"srcSet":"/static/49f3722d7cadbd2be8eefba27f6a5890/7f3f0/react.webp 100w,\n/static/49f3722d7cadbd2be8eefba27f6a5890/b4f62/react.webp 200w,\n/static/49f3722d7cadbd2be8eefba27f6a5890/aa0f9/react.webp 400w","type":"image/webp","sizes":"(min-width: 400px) 400px, 100vw"}]},"width":400,"height":205}}},"categories":"javascript"}},{"excerpt":"最近剛好要使用圖片上傳的功能，但因為資源較少，所以考慮用網路上的 image api 服務，稍微研究後選擇 imgur 的服務。以前拖拉上傳，都是用套件處理掉，剛好來研究一下如何處理拖拉上傳圖片，附加進度條功能。 我們需要取得 imgur api，再來使用 input…","fields":{"slug":"/2018-10-imgprogress/","readingTime":{"text":"9 min read"}},"frontmatter":{"date":"October 27, 2018","title":"Upload progress bar drag&drop 圖片拖拉上傳進度條","description":"首先申請imgur api，再處理input獲取檔案，獲取後串接api，另外針對拖拉要處理事件，要利用dataTransfer獲取檔案，再串接到api，另外針對ajax監聽，製作出進度條。","thumbnail":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/779e17215a7282b0a75020b8f77faf25/6dc05/dragupload.png","srcSet":"/static/779e17215a7282b0a75020b8f77faf25/8ddc1/dragupload.png 100w,\n/static/779e17215a7282b0a75020b8f77faf25/37fa8/dragupload.png 200w,\n/static/779e17215a7282b0a75020b8f77faf25/6dc05/dragupload.png 400w,\n/static/779e17215a7282b0a75020b8f77faf25/1586c/dragupload.png 800w","sizes":"(min-width: 400px) 400px, 100vw"},"sources":[{"srcSet":"/static/779e17215a7282b0a75020b8f77faf25/182d0/dragupload.webp 100w,\n/static/779e17215a7282b0a75020b8f77faf25/1dc03/dragupload.webp 200w,\n/static/779e17215a7282b0a75020b8f77faf25/bc949/dragupload.webp 400w,\n/static/779e17215a7282b0a75020b8f77faf25/4eb70/dragupload.webp 800w","type":"image/webp","sizes":"(min-width: 400px) 400px, 100vw"}]},"width":400,"height":262}}},"categories":"javascript"}},{"excerpt":"前端不斷的演進，更講求畫面快速變化，跳脫傳統傳送資料方式，漸漸改為用 javascript 連接，所以，server 端就負責建立 api，透過串接 api 處理資料。 關於 Api， 就有所謂的 RESTful (Representational State Transfer…","fields":{"slug":"/2018-10-nodejsapi/","readingTime":{"text":"8 min read"}},"frontmatter":{"date":"October 11, 2018","title":"Node.js Express MongoDB RESTful Api 留言板實作教學","description":"RESTful是某種設計架構的稱呼，方便、有彈性的傳輸資料。這邊會用node.js搭配express架構RESTful Api，資料會使用mongoDB，部署到server上，建立一個簡單的留言板。","thumbnail":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/1ed623532b4aa4e991197f6c20908da7/04753/nodeapi.png","srcSet":"/static/1ed623532b4aa4e991197f6c20908da7/ef524/nodeapi.png 100w,\n/static/1ed623532b4aa4e991197f6c20908da7/4715e/nodeapi.png 200w,\n/static/1ed623532b4aa4e991197f6c20908da7/04753/nodeapi.png 400w,\n/static/1ed623532b4aa4e991197f6c20908da7/71a10/nodeapi.png 800w","sizes":"(min-width: 400px) 400px, 100vw"},"sources":[{"srcSet":"/static/1ed623532b4aa4e991197f6c20908da7/467a8/nodeapi.webp 100w,\n/static/1ed623532b4aa4e991197f6c20908da7/f42d9/nodeapi.webp 200w,\n/static/1ed623532b4aa4e991197f6c20908da7/d23e1/nodeapi.webp 400w,\n/static/1ed623532b4aa4e991197f6c20908da7/b7e50/nodeapi.webp 800w","type":"image/webp","sizes":"(min-width: 400px) 400px, 100vw"}]},"width":400,"height":240.99999999999997}}},"categories":"javascript"}},{"excerpt":"最近在公司專案學到了滿好用的功能 postMessage，當今天使用到跨視窗 iframe 或是 openWindow，原本 parent 頁面需要傳遞訊息給內頁 iframe 或是 tab 頁，就可以利用 postMessage 來傳遞資料。接下來會建立 demo…","fields":{"slug":"/2018-09-postmessage/","readingTime":{"text":"5 min read"}},"frontmatter":{"date":"September 23, 2018","title":"HTML postMessage iframe and open window 跨視窗傳訊用法","description":"當今天使用到跨視窗iframe或是openWindow，原本parent頁面需要傳遞訊息給內頁iframe或是tab頁，就可以利用postMessage來傳遞資料。接下來會建立demo頁面，介紹一下iframe跟window open的使用方法。","thumbnail":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#282828","images":{"fallback":{"src":"/static/f481421794be4d14e0e3c6cfc1eee0a7/855ac/post_message.png","srcSet":"/static/f481421794be4d14e0e3c6cfc1eee0a7/1cf7f/post_message.png 100w,\n/static/f481421794be4d14e0e3c6cfc1eee0a7/4f0c9/post_message.png 200w,\n/static/f481421794be4d14e0e3c6cfc1eee0a7/855ac/post_message.png 400w","sizes":"(min-width: 400px) 400px, 100vw"},"sources":[{"srcSet":"/static/f481421794be4d14e0e3c6cfc1eee0a7/7f3f0/post_message.webp 100w,\n/static/f481421794be4d14e0e3c6cfc1eee0a7/0db70/post_message.webp 200w,\n/static/f481421794be4d14e0e3c6cfc1eee0a7/66a52/post_message.webp 400w","type":"image/webp","sizes":"(min-width: 400px) 400px, 100vw"}]},"width":400,"height":202}}},"categories":"javascript"}},{"excerpt":"因緣際會之下，最近剛經歷了招募前端，為了準備面試題目，所以整理了一些關於 JavaScript 的 觀念，其中比較抽象的題目應該是 ProtoType、Event loop、Bubbles Capture，這邊就先來介紹一下其中最抽象也比較難理解的 JavaScript…","fields":{"slug":"/2018-08-jsproto/","readingTime":{"text":"5 min read"}},"frontmatter":{"date":"August 25, 2018","title":"JavaScript Prototype 繼承、原型鏈 Prototype chain","description":"JavaScript沒有類的特性(class-based)，跟Java不一樣，雖然說ES6 有class但它只是語法糖，每個JavaScript都具備有prototype，只是分為公開、私有差異，而JavaScript就用prototype來處理繼承(prototype-based)，特性是延展性高。","thumbnail":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#e8d838","images":{"fallback":{"src":"/static/e0505dfa26d1f0856cca4d8ca2e3fb29/c41f3/JavaScript-logo.png","srcSet":"/static/e0505dfa26d1f0856cca4d8ca2e3fb29/5bb5e/JavaScript-logo.png 100w,\n/static/e0505dfa26d1f0856cca4d8ca2e3fb29/5e981/JavaScript-logo.png 200w,\n/static/e0505dfa26d1f0856cca4d8ca2e3fb29/c41f3/JavaScript-logo.png 400w","sizes":"(min-width: 400px) 400px, 100vw"},"sources":[{"srcSet":"/static/e0505dfa26d1f0856cca4d8ca2e3fb29/7f8c8/JavaScript-logo.webp 100w,\n/static/e0505dfa26d1f0856cca4d8ca2e3fb29/26254/JavaScript-logo.webp 200w,\n/static/e0505dfa26d1f0856cca4d8ca2e3fb29/fcd92/JavaScript-logo.webp 400w","type":"image/webp","sizes":"(min-width: 400px) 400px, 100vw"}]},"width":400,"height":212}}},"categories":"javascript"}},{"excerpt":"如果在開發上是用 React，最常用到就是一定是處理 state、props，而其中最重要的莫過於是生命週期 lifeCycle，可以在每個元件渲染的過程，加入需要的處理，例如載入完元件後非同步抓取資料，更新 props 觸發處理事件等等。接下來就來介紹 life Cycle…","fields":{"slug":"/2018-07-reactlife/","readingTime":{"text":"11 min read"}},"frontmatter":{"date":"July 27, 2018","title":"React Life Cycle 生命週期更新版，父子元件執行順序","description":"開發上用到React，而其中最重要的莫過於是生命週期lifeCycle，可以在每個元件渲染的過程，加入需要的處理，例如載入完元件後非同步抓取資料，更新props觸發處理事件等等。接下來介紹一下新版本的life Cycle。","thumbnail":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#181818","images":{"fallback":{"src":"/static/49f3722d7cadbd2be8eefba27f6a5890/7019c/react.png","srcSet":"/static/49f3722d7cadbd2be8eefba27f6a5890/1cf7f/react.png 100w,\n/static/49f3722d7cadbd2be8eefba27f6a5890/a9c82/react.png 200w,\n/static/49f3722d7cadbd2be8eefba27f6a5890/7019c/react.png 400w","sizes":"(min-width: 400px) 400px, 100vw"},"sources":[{"srcSet":"/static/49f3722d7cadbd2be8eefba27f6a5890/7f3f0/react.webp 100w,\n/static/49f3722d7cadbd2be8eefba27f6a5890/b4f62/react.webp 200w,\n/static/49f3722d7cadbd2be8eefba27f6a5890/aa0f9/react.webp 400w","type":"image/webp","sizes":"(min-width: 400px) 400px, 100vw"}]},"width":400,"height":205}}},"categories":"javascript"}},{"excerpt":"一個網站組成主要會是前端加後端，簡單來說，前端主要是畫面加上操作介面，包含了 html、css、javascript，後端則是處理使用者請求控制回應，例如登入註冊，會員後台等等，其中後端有各種語言例如 PHP、Java、ASP.NET、Node.js、Python、Ruby…","fields":{"slug":"/2018-06-nodestart/","readingTime":{"text":"6 min read"}},"frontmatter":{"date":"June 17, 2018","title":"Node.js、Express、MySQL串接資料庫，Heroku部署環境","description":"在這個前後端分離的時代，多半會再開一台Node.js的server給前端處理router，這邊就要來使用Node.js搭配express以及MySQL來建立簡單的網站router。","thumbnail":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/f7d2ede723788d1d62973a0f7aeba181/8c858/expressdata.png","srcSet":"/static/f7d2ede723788d1d62973a0f7aeba181/994f0/expressdata.png 100w,\n/static/f7d2ede723788d1d62973a0f7aeba181/b471e/expressdata.png 200w,\n/static/f7d2ede723788d1d62973a0f7aeba181/8c858/expressdata.png 400w","sizes":"(min-width: 400px) 400px, 100vw"},"sources":[{"srcSet":"/static/f7d2ede723788d1d62973a0f7aeba181/90ebf/expressdata.webp 100w,\n/static/f7d2ede723788d1d62973a0f7aeba181/ae9d9/expressdata.webp 200w,\n/static/f7d2ede723788d1d62973a0f7aeba181/42566/expressdata.webp 400w","type":"image/webp","sizes":"(min-width: 400px) 400px, 100vw"}]},"width":400,"height":253}}},"categories":"javascript"}},{"excerpt":"換了工作環境，接觸了全新的專案，一打開 react 專案，恩…滿滿的 stateless component，稍微整理一下相關資訊。這邊要來介紹使用 stateless component 的時候，常會搭配使用的 Higher Order Components…","fields":{"slug":"/2018-05-reacthoc/","readingTime":{"text":"4 min read"}},"frontmatter":{"date":"May 08, 2018","title":"React Higher Order Components 初探觀念","description":"介紹關於使用stateless component時，常會搭配使用的Higher Order Components，之前有看到「高階組件」這區塊，被他名字誤會了，實際上一點也不高階，他就只是一個function 函式，接受參數元件然後回傳全新元件，簡易的範例如下。","thumbnail":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#181818","images":{"fallback":{"src":"/static/49f3722d7cadbd2be8eefba27f6a5890/7019c/react.png","srcSet":"/static/49f3722d7cadbd2be8eefba27f6a5890/1cf7f/react.png 100w,\n/static/49f3722d7cadbd2be8eefba27f6a5890/a9c82/react.png 200w,\n/static/49f3722d7cadbd2be8eefba27f6a5890/7019c/react.png 400w","sizes":"(min-width: 400px) 400px, 100vw"},"sources":[{"srcSet":"/static/49f3722d7cadbd2be8eefba27f6a5890/7f3f0/react.webp 100w,\n/static/49f3722d7cadbd2be8eefba27f6a5890/b4f62/react.webp 200w,\n/static/49f3722d7cadbd2be8eefba27f6a5890/aa0f9/react.webp 400w","type":"image/webp","sizes":"(min-width: 400px) 400px, 100vw"}]},"width":400,"height":205}}},"categories":"javascript"}},{"excerpt":"要用到活動或是問卷，相信大家最常會用到 google form，非常快速的創出填表功能，但 google form 存在許多限制，我沒辦法創立特別的欄位，沒辦法做出一個複雜訂餐表單，表單長太醜(痾…其實我對 google…","fields":{"slug":"/2018-02-googleformapi/","readingTime":{"text":"8 min read"}},"frontmatter":{"date":"February 08, 2018","title":"Google sheet 試算表表單串接api","description":"要用到活動或是問卷，相信大家最常會用到google form，非常快速的創出填表功能，但google form存在許多限制，google analytics轉換目標也不能設定，都可以用google excel的api來解決。","thumbnail":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/bf296d6e823a934526cab91eb6eaacae/f4f52/%E7%82%B8%E9%9B%9Edemo.png","srcSet":"/static/bf296d6e823a934526cab91eb6eaacae/4c989/%E7%82%B8%E9%9B%9Edemo.png 100w,\n/static/bf296d6e823a934526cab91eb6eaacae/e1b36/%E7%82%B8%E9%9B%9Edemo.png 200w,\n/static/bf296d6e823a934526cab91eb6eaacae/f4f52/%E7%82%B8%E9%9B%9Edemo.png 400w,\n/static/bf296d6e823a934526cab91eb6eaacae/83279/%E7%82%B8%E9%9B%9Edemo.png 800w","sizes":"(min-width: 400px) 400px, 100vw"},"sources":[{"srcSet":"/static/bf296d6e823a934526cab91eb6eaacae/dc9f7/%E7%82%B8%E9%9B%9Edemo.webp 100w,\n/static/bf296d6e823a934526cab91eb6eaacae/908a7/%E7%82%B8%E9%9B%9Edemo.webp 200w,\n/static/bf296d6e823a934526cab91eb6eaacae/5aeb0/%E7%82%B8%E9%9B%9Edemo.webp 400w,\n/static/bf296d6e823a934526cab91eb6eaacae/f2384/%E7%82%B8%E9%9B%9Edemo.webp 800w","type":"image/webp","sizes":"(min-width: 400px) 400px, 100vw"}]},"width":400,"height":232.00000000000003}}},"categories":"javascript"}},{"excerpt":"javascript 在實務上最常用 array 處理多筆資料，因為彈性大好運用，不論在 api 取資料、cookie、local storage 等，幾乎的用的到。 這邊介紹 Array sort…","fields":{"slug":"/2017-12-arrayhandle/","readingTime":{"text":"3 min read"}},"frontmatter":{"date":"December 16, 2017","title":"Javascript Array sort 陣列排序分類處理","description":"介紹Array sort，現代網頁技術快速發展，前端經常要用到非同步來取得資料，拿到的陣列資料，經常會需要排序功能，ie.價格排序、新舊排序、同類型排序等，sort會對陣列跑兩個數跑比對條件，左至右重複跑到完全符合條件的順序。","thumbnail":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#e8d838","images":{"fallback":{"src":"/static/e0505dfa26d1f0856cca4d8ca2e3fb29/c41f3/JavaScript-logo.png","srcSet":"/static/e0505dfa26d1f0856cca4d8ca2e3fb29/5bb5e/JavaScript-logo.png 100w,\n/static/e0505dfa26d1f0856cca4d8ca2e3fb29/5e981/JavaScript-logo.png 200w,\n/static/e0505dfa26d1f0856cca4d8ca2e3fb29/c41f3/JavaScript-logo.png 400w","sizes":"(min-width: 400px) 400px, 100vw"},"sources":[{"srcSet":"/static/e0505dfa26d1f0856cca4d8ca2e3fb29/7f8c8/JavaScript-logo.webp 100w,\n/static/e0505dfa26d1f0856cca4d8ca2e3fb29/26254/JavaScript-logo.webp 200w,\n/static/e0505dfa26d1f0856cca4d8ca2e3fb29/fcd92/JavaScript-logo.webp 400w","type":"image/webp","sizes":"(min-width: 400px) 400px, 100vw"}]},"width":400,"height":212}}},"categories":"javascript"}},{"excerpt":"大家好我是 Ian，目前是負責網頁前端，每天工作都在處理各種問題~~(pm 奇形需求)~~，順便分享一些相關的解法。\n最近剛好專注在 google map 工具的使用，需要將大量的資料撒上 google map，資料也帶滿多資訊，讓 user 點擊 marker…","fields":{"slug":"/2017-12-mapcluster/","readingTime":{"text":"7 min read"}},"frontmatter":{"date":"December 11, 2017","title":"Google Map marker cluster 標記使用教學","description":"google map下多個marker，再搭配marker的event來互動，以下是打開infowindow的運用。markerwithlabel讓我們更簡單設計不同的marker，例如讓他帶自訂的image，再來是重點 markercluster，它讓我們可以解決marker過多，同時重疊的問題。","thumbnail":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/38e7093d0f66fe667f97b987459880ae/a3d7d/markerconsole.png","srcSet":"/static/38e7093d0f66fe667f97b987459880ae/3056d/markerconsole.png 100w,\n/static/38e7093d0f66fe667f97b987459880ae/fa343/markerconsole.png 200w,\n/static/38e7093d0f66fe667f97b987459880ae/a3d7d/markerconsole.png 400w,\n/static/38e7093d0f66fe667f97b987459880ae/f4a2f/markerconsole.png 800w","sizes":"(min-width: 400px) 400px, 100vw"},"sources":[{"srcSet":"/static/38e7093d0f66fe667f97b987459880ae/f4588/markerconsole.webp 100w,\n/static/38e7093d0f66fe667f97b987459880ae/316eb/markerconsole.webp 200w,\n/static/38e7093d0f66fe667f97b987459880ae/7fed8/markerconsole.webp 400w,\n/static/38e7093d0f66fe667f97b987459880ae/27c6f/markerconsole.webp 800w","type":"image/webp","sizes":"(min-width: 400px) 400px, 100vw"}]},"width":400,"height":170}}},"categories":"javascript"}}]}},"pageContext":{"category":"javascript"}},"staticQueryHashes":["3649515864","3707347541","3761976949"],"slicesMap":{}}