{"componentChunkName":"component---src-templates-post-tsx","path":"/immutable/","result":{"data":{"site":{"siteMetadata":{"title":"Ian Chu"}},"markdownRemark":{"id":"46a5ba7f-31f3-5f2e-86f5-29ebcc1b1f28","excerpt":"Immutable 是我想寫很久的主題，前一份工作時，就大大的踩到關於 immutable 的雷，那時候依靠 google 靠解掉這問題，但總該還債的，面試時候也被這個關內給卡到。現代網頁前端不只是要處理畫面更新，更多時間更會處理大量資料處理，不論是重複封裝 、更新等等。React 更是把 Imutable…","html":"<p>Immutable 是我想寫很久的主題，前一份工作時，就大大的踩到關於 immutable 的雷，那時候依靠 google 靠解掉這問題，但總該還債的，面試時候也被這個關內給卡到。現代網頁前端不只是要處理畫面更新，更多時間更會處理大量資料處理，不論是重複封裝 、更新等等。React 更是把 Imutable 視為重要的開發準則。</p>\n<h2 id=\"immutable-mutable-data\" style=\"position:relative;\"><a href=\"#immutable-mutable-data\" aria-label=\"immutable mutable data permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Immutable mutable data</h2>\n<p>什麼是 Immutable、mutable，Immutable 稱之不可改變的，mutable 則相反是可以改變的。string、number 都是 immutable 的，簡單講就是不可更改的，舉個例子來說</p>\n<ul>\n<li>string immutable</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> str <span class=\"token operator\">=</span> <span class=\"token string\">\"Hello, you!!\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> ianHello <span class=\"token operator\">=</span> str<span class=\"token punctuation\">;</span>\nianHello <span class=\"token operator\">+=</span> <span class=\"token string\">\"ian\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// not changed</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Hello, you!!</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>ianHello<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Hello, you!!ian</span></code></pre></div>\n<p>建立 ianHello 並使用 str 賦值，之後 ianHello 再重新賦值，並不會更動到 str，但 array 就不是這樣了。array 以及 object 使用 call by reference，淺拷貝的做法實現，白話一點講，就是會指導同一個記憶體位置，當你改動資料的時間，是針對指向的那一個記憶體去改，所以才會有連動的狀況。</p>\n<ul>\n<li>array mutable</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> names <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"ian\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> copyName <span class=\"token operator\">=</span> names<span class=\"token punctuation\">;</span>\ncopyName<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"peter\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// changed</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>names<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [ian, peter]</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>copyName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [ian, peter]</span></code></pre></div>\n<p>舉下方的例子來說，大致邏輯是依賴兩個陣列資料，驅使更新畫面更新的，呈現問題的使用方法是，點擊<code class=\"language-text\">複製按鈕</code>，同步兩邊的資料，再點擊任意一個清單的刪除，會發現兩邊畫面居然會連動。</p>\n<iframe src=\"//codepen.io/chu1228/embed/wvMaKYw/?height=265&theme-id=light&default-tab=result\" width=\"100%\" height=\"350\"></iframe>\n<p>會產生問題的原因是，第一我複製資料的時候，讓兩個陣列變成指向同一個，所以才會兩邊連動畫面更新。</p>\n<p>這大致上就是簡單的介紹 immutable 跟 mutable。</p>\n<h2 id=\"react-immutable\" style=\"position:relative;\"><a href=\"#react-immutable\" aria-label=\"react immutable permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>React Immutable</h2>\n<p>React 有提到 state 的更新，都必須要是 immutable，當你有使用到 useState 或是 pureComponent、shouldComponentUpdate，你就會發現問題。下面範例就是 mutable 的更新 state。</p>\n<iframe src=\"https://codesandbox.io/embed/elastic-flower-hlxd6?fontsize=14&hidenavigation=1&theme=dark\" width=\"100%\" height=\"350\"></iframe>\n<ul>\n<li>mutable setState</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> value <span class=\"token operator\">=</span> ref<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\nnames<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">setNames</span><span class=\"token punctuation\">(</span>names<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>結果就是沒辦法觸發 update component，因為 useState 就有自帶了 shallowEqual，同一個記憶體位置去比較有無更新，當然恆等於，所以這個案例，你怎們加入都無法更新畫面。</p>\n<ul>\n<li>immutable setState</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">setNames</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">names</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>names<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><a href=\"https://reactjs.org/docs/optimizing-performance.html#the-power-of-not-mutating-data\" title=\"react optimizing-performance\">react optimizing-performance</a></p>\n<p><a href=\"https://redux.js.org/recipes/structuring-reducers/beyond-combinereducers#using-slice-reducers-with-immutablejs-objects\" title=\"redux reducers immutablejs\">redux reducers immutablejs</a></p>\n<h2 id=\"心得\" style=\"position:relative;\"><a href=\"#%E5%BF%83%E5%BE%97\" aria-label=\"心得 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>心得</h2>\n<p>記得剛轉前端工作的時候，被這問題卡了一下午，最後是靠 stackoverflow <code class=\"language-text\">slice</code>，來解決問題。以前遇到問題都是找到解法就結束了，但說實在沒搞懂原因，這樣遲早還是得回頭還債的。</p>\n<p>勉勵一下自己，要求慎解啊！</p>\n<p>一樣有問題、或是錯誤，歡迎留言，感謝閱讀。</p>","fields":{"readingTime":{"text":"4 min read"}},"frontmatter":{"title":"Immutable 對於 React 重要性","date":"April 29, 2020","description":"React 有提到 state 的更新，都必須要是 immutable，當你有使用到 useState 或是 pureComponent、shouldComponentUpdate，你就會發現問題。","categories":"javascript","tags":["javascript","react.js"],"thumbnail":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#e8e8f8","images":{"fallback":{"src":"/static/4f1b194d3f394f7e66bb7c726da840eb/420a1/immutable.jpg","srcSet":"/static/4f1b194d3f394f7e66bb7c726da840eb/40c00/immutable.jpg 218w,\n/static/4f1b194d3f394f7e66bb7c726da840eb/1a76e/immutable.jpg 437w,\n/static/4f1b194d3f394f7e66bb7c726da840eb/420a1/immutable.jpg 873w","sizes":"(min-width: 873px) 873px, 100vw"},"sources":[{"srcSet":"/static/4f1b194d3f394f7e66bb7c726da840eb/9453b/immutable.webp 218w,\n/static/4f1b194d3f394f7e66bb7c726da840eb/ac28b/immutable.webp 437w,\n/static/4f1b194d3f394f7e66bb7c726da840eb/ba085/immutable.webp 873w","type":"image/webp","sizes":"(min-width: 873px) 873px, 100vw"}]},"width":1280,"height":524.9026345933563}}},"image":{"publicURL":"/static/4f1b194d3f394f7e66bb7c726da840eb/immutable.png"}},"tableOfContents":"<ul>\n<li><a href=\"#immutable-mutable-data\">Immutable mutable data</a></li>\n<li><a href=\"#react-immutable\">React Immutable</a></li>\n<li><a href=\"#%E5%BF%83%E5%BE%97\">心得</a></li>\n</ul>"},"previous":{"fields":{"slug":"/2020-06-closure/"},"frontmatter":{"title":"JavaScript Closure 你一定有用過的閉包"}},"next":{"fields":{"slug":"/2020-02-reactpuppeteer/"},"frontmatter":{"title":"Puppeteer End-to-End Test React"}}},"pageContext":{"id":"46a5ba7f-31f3-5f2e-86f5-29ebcc1b1f28","previousPostId":"bde7fdee-0af9-59a7-b895-c8baae8b6767","nextPostId":"488ce399-f7c8-50c4-a7ad-e0ee7917861e"}},"staticQueryHashes":["3649515864","3707347541","3761976949"],"slicesMap":{}}